{"version":3,"file":"contacts.min.js","names":["bindContactsTabs","node","querySelectorAll","map","btn","addEventListener","e","preventDefault","querySelector","classList","remove","add","getAttribute","window","document","Fancybox","bind","phoneInput","Inputmask","mask","showMaskOnHover"],"sources":["helpers/collapseText.js"],"sourcesContent":["const collapseChildItems = function (selector, setOptions) {\n    const blocks = document.querySelectorAll(selector + ':not(.collapseElement)');\n    const options = {\n        children: setOptions.children || '*',                   // html selector (string)\n        targetHeight: setOptions.targetHeight || null,          // height block (number)\n        targetCount: setOptions.targetCount || null,            // count childrens (number)\n        reduceHeight: setOptions.reduceHeight || 0,             // value reduce height (number)\n        buttonClass: setOptions.buttonClass || '',              // button (string)\n        buttonMore: setOptions.buttonMore || 'Смотреть еще',    // button (string)\n        buttonLess: setOptions.buttonLess || 'Скрыть',          // button (string)\n    }\n\n    if (!blocks[0]) return false;\n\n    for (let i = 0; i < blocks.length; i++) {\n        const block = blocks[i];\n        if (options.targetHeight !== null) {\n            initCollapseHeight(block);\n            initEvents(block, 'height');\n        } else if (options.targetCount !== null) {\n            initCollapseItems(block);\n            initEvents(block, 'count');\n        }\n    }\n\n    function initCollapseHeight(block) {\n        const blockHeight = block.offsetHeight;\n\n        if (blockHeight > options.targetHeight) {\n            htmlStructure(block, 'collapseElement_height');\n\n            block.querySelector('[data-collapse-element-wrap]').style.height = options.targetHeight - options.reduceHeight + 'px';\n        }\n    }\n\n    function initCollapseItems(block) {\n        if (block.querySelectorAll(options.children).length > options.targetCount) {\n            htmlStructure(block);\n\n            const childrens = block.querySelectorAll(options.children); // !!! important after fn htmlStructure\n\n            for (let i = 0; i < childrens.length; i++) {\n                if (i + 1 > options.targetCount) {\n                    childrens[i].classList.add('collapseElement__hidden');\n                }\n            }\n        }\n    }\n\n    function htmlStructure(block, addClass) {\n        block.classList.add('collapseElement', 'collapseElement_hide');\n        addClass && block.classList.add(addClass);\n        block.innerHTML = htmlContent(block);\n    }\n\n    function htmlContent(block) {\n        const content = '<div class=\"collapseElement__content\" data-collapse-element-content>' + block.innerHTML + '</div>';\n        const button = '<button class=\"collapseElement__button ' + options.buttonClass + '\" type=\"button\" data-collapse-element-button><span>' + options.buttonMore + '</span><span>' + options.buttonLess + '</span></button>';\n        const newContent = '<div class=\"collapseElement__wrap\" data-collapse-element-wrap>' + content + '</div>' + button;\n\n        return newContent;\n    }\n\n    function initEvents(block, action) {\n        const button = block.querySelector('[data-collapse-element-button]');\n\n        button && button.addEventListener('click', function (e) {\n            e.preventDefault();\n            if (block.classList.contains('collapseElement_hide')) {\n                block.classList.remove('collapseElement_hide');\n                if (action === 'height') {\n                    const wrap = block.querySelector('[data-collapse-element-wrap]');\n                    const contentHeight = block.querySelector('[data-collapse-element-content]').offsetHeight;\n                    wrap.style.height = contentHeight + 'px';\n                    setTimeout(function () {\n                        wrap.style.height = 'auto';\n                    }, 200);\n                }\n            } else {\n                block.classList.add('collapseElement_hide');\n                if (action === 'height') {\n                    const wrap = block.querySelector('[data-collapse-element-wrap]');\n                    const wrapHeight = wrap.offsetHeight;\n                    wrap.style.height = wrapHeight + 'px';\n                    setTimeout(function () {\n                        wrap.style.height = options.targetHeight - options.reduceHeight + 'px';\n                    }, 0)\n                }\n            }\n        });\n    }\n}"],"mappings":"AAAA,MAAAA,iBAAAC,IACA,IAAAA,EACA,SAGA,IAAAA,EAAAC,iBAAA,2BAEAC,KAAAC,IACAA,EAAAC,iBAAA,SAAAC,IACAA,EAAAC,iBAEAN,EAAAO,cAAA,kCACAP,EAAAO,cAAA,iCAAAC,UAAAC,OAAA,gCAEAN,EAAAK,UAAAE,IAAA,gCAEAV,EAAAO,cAAA,mCACAP,EAAAO,cAAA,kCAAAC,UAAAC,OAAA,iCAEAT,EAAAO,cAAAJ,EAAAQ,aAAA,SAAAH,UAAAE,IAAA,mCACA,IAGA,IAAAV,EAAAC,iBAAA,sCAEAC,KAAAC,IACAA,EAAAC,iBAAA,SAAAC,IACAA,EAAAC,iBAEAN,EAAAO,cAAA,6CACAP,EAAAO,cAAA,4CAAAC,UAAAC,OAAA,2CAEAN,EAAAK,UAAAE,IAAA,2CAEAV,EAAAO,cAAA,8CACAP,EAAAO,cAAA,6CAAAC,UAAAC,OAAA,4CAEAT,EAAAO,cAAAJ,EAAAQ,aAAA,SAAAH,UAAAE,IAAA,8CACA,GACA,EAGAE,OAAAR,iBAAA,yBACAL,iBAAAc,SAAAN,cAAA,mBAEAO,SAAAC,KAAA,sBAEA,UAAAC,KAAAH,SAAAZ,iBAAA,qBACAgB,WACAA,UAAA,CAAAC,KAAA,uCAAAC,iBAAA,IAAAD,KAAAF,EAEA"}