{"version":3,"sources":["helpers/collapseText.js","catalog.js"],"names":["collapseChildItems","selector","setOptions","blocks","document","querySelectorAll","options","children","targetHeight","targetCount","reduceHeight","buttonClass","buttonMore","buttonLess","i","length","block","initCollapseHeight","initEvents","initCollapseItems","offsetHeight","htmlStructure","querySelector","style","height","childrens","classList","add","addClass","innerHTML","content","button","htmlContent","action","addEventListener","e","preventDefault","contains","remove","wrap","contentHeight","setTimeout","wrapHeight","bindCardSlider","sliderNode","Swiper","pagination","el","clickable","bindLikeBtn","btnNode","id","target","fetch","then","resp","json","status","Error","catch","err","console","log","bindCompareBtn","bindCartBtn","name","success","Fancybox","show","src","type","bindItemCard","itemCardNode","itemId","getAttribute","innerText","cartBtn","itemsSlider","slidesPerView","spaceBetween","breakpoints","bindPerPageSelect","selectNode","NiceSelect","bind","bindSortSelect","params","URLSearchParams","window","location","search","set","value","toString","localStorage","setItem","pathname","bindFilterShowButton","filterNode","showBtn","initialBtnText","toggle","toLowerCase","scrollToCatalog","flag","getItem","catalogNode","scrollIntoView","behavior","removeItem","bindFilterPrice","noUiSlider","create","start","Number","connect","step","range","min","max","inputMin","inputMax","on","values","handle","Math","round","this","bindSectionsListAdaptive","node","matchMedia","matches","ADAPTIVE_SUBSECTIONS_FLAG","select","createElement","list","activeEl","append","cloneNode","btnClose","setAttribute","after","bindFiltersAdaptive","btn","sidebar","display","closeSidebar","removeEventListener","bindFilterChange","inputs","map","input","visibility","opacity","cardItemNode","itemsSliderNode"],"mappings":"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","file":"catalog.min.js","sourcesContent":["const collapseChildItems = function (selector, setOptions) {\n    const blocks = document.querySelectorAll(selector + ':not(.collapseElement)');\n    const options = {\n        children: setOptions.children || '*',                   // html selector (string)\n        targetHeight: setOptions.targetHeight || null,          // height block (number)\n        targetCount: setOptions.targetCount || null,            // count childrens (number)\n        reduceHeight: setOptions.reduceHeight || 0,             // value reduce height (number)\n        buttonClass: setOptions.buttonClass || '',              // button (string)\n        buttonMore: setOptions.buttonMore || 'Смотреть еще',    // button (string)\n        buttonLess: setOptions.buttonLess || 'Скрыть',          // button (string)\n    }\n\n    if (!blocks[0]) return false;\n\n    for (let i = 0; i < blocks.length; i++) {\n        const block = blocks[i];\n        if (options.targetHeight !== null) {\n            initCollapseHeight(block);\n            initEvents(block, 'height');\n        } else if (options.targetCount !== null) {\n            initCollapseItems(block);\n            initEvents(block, 'count');\n        }\n    }\n\n    function initCollapseHeight(block) {\n        const blockHeight = block.offsetHeight;\n\n        if (blockHeight > options.targetHeight) {\n            htmlStructure(block, 'collapseElement_height');\n\n            block.querySelector('[data-collapse-element-wrap]').style.height = options.targetHeight - options.reduceHeight + 'px';\n        }\n    }\n\n    function initCollapseItems(block) {\n        if (block.querySelectorAll(options.children).length > options.targetCount) {\n            htmlStructure(block);\n\n            const childrens = block.querySelectorAll(options.children); // !!! important after fn htmlStructure\n\n            for (let i = 0; i < childrens.length; i++) {\n                if (i + 1 > options.targetCount) {\n                    childrens[i].classList.add('collapseElement__hidden');\n                }\n            }\n        }\n    }\n\n    function htmlStructure(block, addClass) {\n        block.classList.add('collapseElement', 'collapseElement_hide');\n        addClass && block.classList.add(addClass);\n        block.innerHTML = htmlContent(block);\n    }\n\n    function htmlContent(block) {\n        const content = '<div class=\"collapseElement__content\" data-collapse-element-content>' + block.innerHTML + '</div>';\n        const button = '<button class=\"collapseElement__button ' + options.buttonClass + '\" type=\"button\" data-collapse-element-button><span>' + options.buttonMore + '</span><span>' + options.buttonLess + '</span></button>';\n        const newContent = '<div class=\"collapseElement__wrap\" data-collapse-element-wrap>' + content + '</div>' + button;\n\n        return newContent;\n    }\n\n    function initEvents(block, action) {\n        const button = block.querySelector('[data-collapse-element-button]');\n\n        button && button.addEventListener('click', function (e) {\n            e.preventDefault();\n            if (block.classList.contains('collapseElement_hide')) {\n                block.classList.remove('collapseElement_hide');\n                if (action === 'height') {\n                    const wrap = block.querySelector('[data-collapse-element-wrap]');\n                    const contentHeight = block.querySelector('[data-collapse-element-content]').offsetHeight;\n                    wrap.style.height = contentHeight + 'px';\n                    setTimeout(function () {\n                        wrap.style.height = 'auto';\n                    }, 200);\n                }\n            } else {\n                block.classList.add('collapseElement_hide');\n                if (action === 'height') {\n                    const wrap = block.querySelector('[data-collapse-element-wrap]');\n                    const wrapHeight = wrap.offsetHeight;\n                    wrap.style.height = wrapHeight + 'px';\n                    setTimeout(function () {\n                        wrap.style.height = options.targetHeight - options.reduceHeight + 'px';\n                    }, 0)\n                }\n            }\n        });\n    }\n}","const collapseChildItems = function (selector, setOptions) {\n    const blocks = document.querySelectorAll(selector + ':not(.collapseElement)');\n    const options = {\n        children: setOptions.children || '*',                   // html selector (string)\n        targetHeight: setOptions.targetHeight || null,          // height block (number)\n        targetCount: setOptions.targetCount || null,            // count childrens (number)\n        reduceHeight: setOptions.reduceHeight || 0,             // value reduce height (number)\n        buttonClass: setOptions.buttonClass || '',              // button (string)\n        buttonMore: setOptions.buttonMore || 'Смотреть еще',    // button (string)\n        buttonLess: setOptions.buttonLess || 'Скрыть',          // button (string)\n    }\n\n    if (!blocks[0]) return false;\n\n    for (let i = 0; i < blocks.length; i++) {\n        const block = blocks[i];\n        if (options.targetHeight !== null) {\n            initCollapseHeight(block);\n            initEvents(block, 'height');\n        } else if (options.targetCount !== null) {\n            initCollapseItems(block);\n            initEvents(block, 'count');\n        }\n    }\n\n    function initCollapseHeight(block) {\n        const blockHeight = block.offsetHeight;\n\n        if (blockHeight > options.targetHeight) {\n            htmlStructure(block, 'collapseElement_height');\n\n            block.querySelector('[data-collapse-element-wrap]').style.height = options.targetHeight - options.reduceHeight + 'px';\n        }\n    }\n\n    function initCollapseItems(block) {\n        if (block.querySelectorAll(options.children).length > options.targetCount) {\n            htmlStructure(block);\n\n            const childrens = block.querySelectorAll(options.children); // !!! important after fn htmlStructure\n\n            for (let i = 0; i < childrens.length; i++) {\n                if (i + 1 > options.targetCount) {\n                    childrens[i].classList.add('collapseElement__hidden');\n                }\n            }\n        }\n    }\n\n    function htmlStructure(block, addClass) {\n        block.classList.add('collapseElement', 'collapseElement_hide');\n        addClass && block.classList.add(addClass);\n        block.innerHTML = htmlContent(block);\n    }\n\n    function htmlContent(block) {\n        const content = '<div class=\"collapseElement__content\" data-collapse-element-content>' + block.innerHTML + '</div>';\n        const button = '<button class=\"collapseElement__button ' + options.buttonClass + '\" type=\"button\" data-collapse-element-button><span>' + options.buttonMore + '</span><span>' + options.buttonLess + '</span></button>';\n        const newContent = '<div class=\"collapseElement__wrap\" data-collapse-element-wrap>' + content + '</div>' + button;\n\n        return newContent;\n    }\n\n    function initEvents(block, action) {\n        const button = block.querySelector('[data-collapse-element-button]');\n\n        button && button.addEventListener('click', function (e) {\n            e.preventDefault();\n            if (block.classList.contains('collapseElement_hide')) {\n                block.classList.remove('collapseElement_hide');\n                if (action === 'height') {\n                    const wrap = block.querySelector('[data-collapse-element-wrap]');\n                    const contentHeight = block.querySelector('[data-collapse-element-content]').offsetHeight;\n                    wrap.style.height = contentHeight + 'px';\n                    setTimeout(function () {\n                        wrap.style.height = 'auto';\n                    }, 200);\n                }\n            } else {\n                block.classList.add('collapseElement_hide');\n                if (action === 'height') {\n                    const wrap = block.querySelector('[data-collapse-element-wrap]');\n                    const wrapHeight = wrap.offsetHeight;\n                    wrap.style.height = wrapHeight + 'px';\n                    setTimeout(function () {\n                        wrap.style.height = options.targetHeight - options.reduceHeight + 'px';\n                    }, 0)\n                }\n            }\n        });\n    }\n}\nconst bindCardSlider = (sliderNode) => {\n    if (!sliderNode || !sliderNode.classList.contains('swiper')) {\n        return false;\n    }\n\n    if (!!Swiper) {\n        return new Swiper(sliderNode, {\n            pagination: {\n                el: \".swiper-pagination\", clickable: true,\n            },\n        })\n    }\n}\n\nconst bindLikeBtn = (btnNode, id) => {\n    if (!btnNode || !id) {\n        return false;\n    }\n\n    btnNode.addEventListener('click', (e) => {\n        e.preventDefault();\n\n        if (e.target.classList.contains('item-card__like_liked')) {\n            //todo: здесь вставить запрос на удаление из лайков\n            fetch('/somepath/' + id)\n                .then((resp) => resp.json())\n                .then((resp) => {\n                    if (resp.status === 'success') {\n                        e.target.classList.remove('item-card__like_liked')\n                    } else {\n                        throw new Error('Серверная ошибка удаления товара из понравившихся')\n                    }\n                })\n                .catch((err) => {\n                    console.log(err)\n                })\n        } else {\n            //todo: здесь вставить запрос на добавление в лайки\n            fetch('/somepath/' + id)\n                .then((resp) => resp.json())\n                .then((resp) => {\n                    if (resp.status === 'success') {\n                        e.target.classList.add('item-card__like_liked')\n                    } else {\n                        throw new Error('Серверная ошибка добавления товара в понравившиеся')\n                    }\n                })\n                .catch((err) => {\n                    console.log(err)\n                })\n        }\n    })\n}\n\nconst bindCompareBtn = (btnNode, id) => {\n    if (!btnNode || !id) {\n        return false;\n    }\n\n    btnNode.addEventListener('click', (e) => {\n        e.preventDefault();\n\n        if (e.target.classList.contains('item-card__compare_compared')) {\n            //todo: здесь вставить запрос на удаление из сравнения\n            fetch('/somepath/' + id)\n                .then((resp) => resp.json())\n                .then((resp) => {\n                    if (resp.status === 'success') {\n                        e.target.classList.remove('item-card__compare_compared')\n                    } else {\n                        throw new Error('Серверная ошибка удаления товара из сравнения')\n                    }\n                })\n                .catch((err) => {\n                    console.log(err)\n                })\n        } else {\n            //todo: здесь вставить запрос на добавление в сравнение\n            fetch('/somepath/' + id)\n                .then((resp) => resp.json())\n                .then((resp) => {\n                    if (resp.status === 'success') {\n                        e.target.classList.add('item-card__compare_compared')\n                    } else {\n                        throw new Error('Серверная ошибка добавления товара в сравнение')\n                    }\n                })\n                .catch((err) => {\n                    console.log(err)\n                })\n        }\n    })\n}\n\nconst bindCartBtn = (btnNode, id, name) => {\n    if (!btnNode || !id) {\n        return false;\n    }\n\n    btnNode.addEventListener('click', (e) => {\n        e.preventDefault();\n\n        if (e.target.classList.contains('item-card__cart_in-cart')) {\n\n            fetch(`/ajax/basket.php?id=${id}&delete=Y`)\n                .then((resp) => resp.json())\n                .then((resp) => {\n                    if (resp.success) {\n                        e.target.classList.remove('item-card__cart_in-cart')\n                    } else {\n                        throw new Error('Серверная ошибка удаления товара из корзины')\n                    }\n                })\n                .catch((err) => {\n                    console.log(err)\n                })\n        } else {\n\n            fetch(`/ajax/basket.php?id=${id}&count=1&json=1`)\n                .then((resp) => resp.json())\n                .then((resp) => {\n                    if (resp.success) {\n                        e.target.classList.add('item-card__cart_in-cart');\n                        Fancybox.show([{\n                            src: `<div class=\"modal-cart-confirmation\">\n<div>Товар <b>\"${name}\"</b> добавлен в корзину.</div>\n<div class=\"modal-cart-confirmation__buttons\">\n<a href=\"/basket/\">Перейти в корзину</a>\n<div class=\"is-close-btn\" onclick=\"Fancybox.close()\">Продолжить покупки</div>\n</div>\n</div>`, type: \"html\",\n                        },]);\n                    } else {\n                        throw new Error('Серверная ошибка добавления товара в корзину')\n                    }\n                })\n                .catch((err) => {\n                    console.log(err)\n                })\n        }\n    })\n}\n\nconst bindItemCard = (itemCardNode) => {\n    if (!itemCardNode) {\n        return false;\n    }\n\n    const itemId = itemCardNode.getAttribute('data-item-id');\n\n    bindCardSlider(itemCardNode.querySelector('.swiper'));\n\n    bindLikeBtn(itemCardNode.querySelector('.js-item-card-like'), itemId);\n\n    bindCompareBtn(itemCardNode.querySelector('.js-item-card-compare'), itemId);\n\n    const name = itemCardNode.querySelector('.item-card__name').innerText;\n\n    for (const cartBtn of itemCardNode.querySelectorAll('.js-item-card-cart')) {\n        bindCartBtn(cartBtn, itemId, name)\n    }\n\n}\n\nconst itemsSlider = (sliderNode) => {\n    if (!sliderNode) {\n        return false;\n    }\n\n    if (!!Swiper) {\n        return new Swiper(sliderNode.querySelector('.swiper'), {\n            slidesPerView: 8, spaceBetween: 20, breakpoints: {\n                1730: {\n                    slidesPerView: 8,\n                }, 1560: {\n                    slidesPerView: 7,\n                }, 1360: {\n                    slidesPerView: 6,\n                }, 1100: {\n                    slidesPerView: 5,\n                }, 851: {\n                    slidesPerView: 4,\n                }, 641: {\n                    slidesPerView: 3,\n                }, 351: {\n                    slidesPerView: 2,\n                }, 0: {\n                    slidesPerView: 1,\n                }\n\n            }\n        })\n    }\n}\n\nconst bindPerPageSelect = (selectNode) => {\n    if (!selectNode || !NiceSelect) {\n        return false;\n    }\n\n    NiceSelect.bind(selectNode);\n}\n\nconst bindSortSelect = (selectNode) => {\n    if (!selectNode || !NiceSelect) {\n        return false;\n    }\n\n    NiceSelect.bind(selectNode);\n\n    selectNode.addEventListener('change', (e) => {\n        const params = new URLSearchParams(window.location.search);\n\n        params.set(e.target.getAttribute('name'), e.target.value);\n        params.toString();\n\n        localStorage.setItem('scrollToCatalog', '1');\n\n        window.location = window.location.pathname + '?' + params.toString();\n    })\n}\n\nconst bindFilterShowButton = (filterNode) => {\n    if (!filterNode) {\n        return false;\n    }\n\n    const checkboxes = filterNode.querySelectorAll('.filter__checkbox');\n\n    if (!checkboxes) {\n        return false;\n    }\n\n    /*for (const checkbox of checkboxes) {\n        if (checkbox.classList.contains('filter__checkbox_show')) {\n            checkbox.setAttribute('data-default', '1');\n        }\n    }*/\n\n    const showBtn = filterNode.querySelector('.filter__show-more');\n\n    if (!showBtn) {\n        return false;\n    }\n\n    const initialBtnText = showBtn.innerHTML;\n\n    showBtn.addEventListener('click', (e) => {\n        e.preventDefault();\n\n        filterNode.classList.toggle('filter_show-all');\n\n        showBtn.innerHTML.toLowerCase() === 'свернуть' ? showBtn.innerHTML = initialBtnText : showBtn.innerHTML = 'Свернуть';\n\n    })\n}\n\nconst scrollToCatalog = () => {\n    const flag = localStorage.getItem('scrollToCatalog');\n    const catalogNode = document.querySelector('.catalog-layout');\n\n    if (flag && catalogNode) {\n        catalogNode.scrollIntoView({behavior: 'smooth'});\n\n        localStorage.removeItem('scrollToCatalog');\n    }\n}\n\nconst bindFilterPrice = (filterNode) => {\n    if (!filterNode) {\n        return false;\n    }\n\n    const sliderNode = filterNode.querySelector('.filter__price-slider');\n\n    if (!sliderNode || !noUiSlider) {\n        return false;\n    }\n\n    noUiSlider.create(sliderNode, {\n        start: [Number(sliderNode.getAttribute('data-min')) || 0, Number(sliderNode.getAttribute('data-max')) || 500000],\n        connect: true,\n        step: 100,\n        range: {\n            'min': Number(sliderNode.getAttribute('data-min')) || 0,\n            'max': Number(sliderNode.getAttribute('data-max')) || 500000,\n        },\n    });\n\n    const inputMin = filterNode.querySelector('[name=\"price_from\"]');\n    const inputMax = filterNode.querySelector('[name=\"price_to\"]');\n\n    sliderNode.noUiSlider.on('update', function (values, handle) {\n\n        const value = values[handle];\n\n        if (handle) {\n            inputMax.value = Math.round(value);\n        } else {\n            inputMin.value = Math.round(value);\n        }\n    });\n\n    inputMin.addEventListener('change', function () {\n        sliderNode.noUiSlider.set([this.value, null]);\n    });\n\n    inputMax.addEventListener('change', function () {\n        sliderNode.noUiSlider.set([null, this.value]);\n    });\n\n\n}\n\nconst bindSectionsListAdaptive = (node) => {\n    if (!node) {\n        return false;\n    }\n\n    if (window.matchMedia('(max-width: 750px)').matches && window.ADAPTIVE_SUBSECTIONS_FLAG) {\n        return false;\n    }\n\n    if (window.matchMedia('(min-width: 751px)').matches && !window.ADAPTIVE_SUBSECTIONS_FLAG) {\n        return false;\n    }\n\n    if (window.matchMedia('(max-width: 750px)').matches && !window.ADAPTIVE_SUBSECTIONS_FLAG) {\n\n        window.ADAPTIVE_SUBSECTIONS_FLAG = true;\n\n        const select = document.createElement('div');\n        select.classList.add('sections-list-select');\n\n        const list = node.querySelector('ul');\n\n        const activeEl = list.querySelector('.sections-list__item_active');\n\n\n        if (!activeEl) {\n            select.innerText = 'Выбрать раздел каталога';\n        }\n\n        if (activeEl) {\n            select.append(activeEl.cloneNode(true));\n\n            select.querySelector('a').addEventListener('click', (e) => {\n                e.preventDefault();\n            })\n        }\n\n        const btnClose = document.createElement('li');\n        btnClose.setAttribute('type', 'button');\n        btnClose.classList.add('sections-list__close-btn');\n\n        list.append(btnClose)\n\n        node.after(select);\n\n        select.addEventListener('click', (e) => {\n            node.classList.toggle('sections-list_opened');\n        })\n\n        node.addEventListener('click', (e) => {\n            if (node === e.target || btnClose === e.target) {\n                node.classList.remove('sections-list_opened');\n            }\n        })\n\n\n    }\n\n    if (window.matchMedia('(min-width: 751px)').matches && window.ADAPTIVE_SUBSECTIONS_FLAG) {\n        window.ADAPTIVE_SUBSECTIONS_FLAG = false;\n\n        document.querySelector('.sections-list-select') && document.querySelector('.sections-list-select').remove();\n    }\n\n}\n\nconst bindFiltersAdaptive = () => {\n    const btn = document.querySelector('.sort__filters-adaptive');\n    const sidebar = document.querySelector('.catalog-layout__sidebar');\n\n    if (!sidebar && btn) {\n        btn.style.display = 'none';\n        return false;\n    }\n\n    if (!sidebar || !btn) {\n        return false;\n    }\n\n    const closeSidebar = (e) => {\n        if (!e) {\n            sidebar.classList.remove('catalog-layout__sidebar_opened');\n            document.removeEventListener('click', closeSidebar);\n            return true;\n        }\n        if (e.target === btn) {\n            return false;\n        }\n        if (e.target === sidebar || sidebar.contains(e.target)) {\n            return false;\n        }\n        sidebar.classList.remove('catalog-layout__sidebar_opened');\n        document.removeEventListener('click', closeSidebar);\n    }\n\n    btn.addEventListener('click', (e) => {\n        e.preventDefault();\n        if (!sidebar.classList.contains('catalog-layout__sidebar_opened')) {\n            sidebar.classList.add('catalog-layout__sidebar_opened');\n            document.addEventListener('click', closeSidebar);\n        } else {\n            closeSidebar();\n        }\n    })\n    sidebar.querySelector('.catalog-layout__sidebar-close').addEventListener('click', (e) => {\n        e.preventDefault();\n        closeSidebar();\n    })\n\n    sidebar.querySelector('.filters__actions button').addEventListener('click', () => {\n        closeSidebar()\n    })\n}\n\nconst bindFilterChange = (node) => {\n    if (!node) {\n        return false;\n    }\n\n    const inputs = [...node.querySelectorAll('input')];\n    const btn = node.querySelector('.filters__actions button');\n\n    inputs.map((input) => {\n        input.addEventListener('change', () => {\n            btn.style.visibility = 'visible';\n            btn.style.opacity = '1';\n        })\n    })\n\n    btn.addEventListener('click', (e) => {\n        e.preventDefault();\n        btn.style.visibility = 'hidden';\n        btn.style.opacity = '0';\n    })\n}\n\nwindow.addEventListener('DOMContentLoaded', () => {\n\n    for (const cardItemNode of document.querySelectorAll('.item-card')) {\n        bindItemCard(cardItemNode)\n    }\n\n    for (const itemsSliderNode of document.querySelectorAll('.items-slider')) {\n        itemsSlider(itemsSliderNode)\n    }\n\n    for (const sliderNode of document.querySelectorAll('.sort__item select')) {\n        bindSortSelect(sliderNode)\n    }\n\n    scrollToCatalog();\n\n    for (const filterNode of document.querySelectorAll('.filter')) {\n        bindFilterShowButton(filterNode)\n    }\n\n    for (const filterNode of document.querySelectorAll('.filter__price')) {\n        bindFilterPrice(filterNode)\n    }\n\n    bindSectionsListAdaptive(document.querySelector('.sections-list'));\n\n    bindFiltersAdaptive();\n\n    bindFilterChange(document.querySelector('.filters'));\n\n    collapseChildItems('.js-collapsible-text', {\n        targetHeight: 150,\n        buttonMore: 'Развернуть',\n        buttonLess: 'Свернуть'\n    });\n})\n\nwindow.addEventListener('resize', () => {\n    bindSectionsListAdaptive(document.querySelector('.sections-list'));\n})\n\n\n\n\n"]}