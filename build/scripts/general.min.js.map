{"version":3,"sources":["general.js","components/base/menu.js","components/base/adapt.js","components/base/search.js","components/base/headerFixed.js","components/base/breadcrumbs.js","components/base/footer.js","helpers/trottle.js","helpers/toggle-visibility.js","components/load-images.js","components/lazy-load-block.js"],"names":["projectOptions","states","maskes","error","default","request","onClick","burg","document","querySelector","menu","searchButton","showMobileMenu","addEventListener","classList","contains","remove","page","body","add","useDynamicAdapt","type","className","attrName","dNodes","result","querySelectorAll","forEach","element","attr","getAttribute","toSelector","breakpoint","order","split","map","val","trim","to","value","push","parent","parentElement","undefined","isNaN","Number","index","items","isMin","sort","a","b","sortDNodes","getDNodes","Set","item","query","dMediaQuery","matchMedia","window","mediaHandler","matches","dNode","children","indexOf","getIndexInParent","length","append","prepend","before","moveTo","reverse","moveBack","getMediaHandler","filter","e","withinBoundaries","composedPath","includes","withinBurg","withinSearch","headerSearch","headerSearchClose","searchBtn","headerFixed","header","firstScreen","firstScreenHeight","offsetHeight","headerHeight","sumOffset","pageYOffset","style","paddingTop","breadcrumbs","selector","list","inside","toggle","params","toggleInside","action","toggleVisibility","checkWidth","available","Math","ceil","getBoundingClientRect","width","main","current","viewDots","link","dots","viewLinks","i","itemWidth","clone","setAttribute","target","closest","throttle","controls","control","callee","timeout","console","log","timer","args","setTimeout","clearTimeout","callback","options","Object","assign","display","changeHeight","changeOpacity","animation","styles","transition","isVisibleElement","box","height","bottom","top","right","left","checkVisible","_targetVisible","visibility","overflow","opacity","getStyles","_h","h","_pt","pt","_pb","pb","_mt","mt","_mb","mb","_btw","btw","_bbw","bbw","marginTop","marginBottom","paddingBottom","borderTopWidth","borderBottomWidth","getStyle","parseInt","getComputedStyle","initImages","lozad","observe","initLazyLoadBlock","load","block","url","axios","get","then","response","data","innerHTML","warn","initDefaultElements","catch","pageReady"],"mappings":"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","file":"general.min.js","sourcesContent":["'use strict';\n\nconst projectOptions = {\n  states: {},\n  maskes: {},\n  error: {\n    default: 'Ошибка при отправке данных! Пожалуйста, попробуйте позже.',\n    request: 'Ошибка при отправке данных! Пожалуйста, свяжитесь с нами по телефону <a class=\"customLink customLink_light\" href=\"tel:88005112733\"><nobr>8 (800) 511-27-33</nobr></a>'\n  },\n  onClick: [],\n};\n\n\nlet burg = document.querySelector('.js-burger');\n\nlet menu = document.querySelector('.js-header-menu');\n\nlet searchButton = document.querySelector('.headerActions__btn_search');\n\n\n\nfunction showMobileMenu () {\n\n    if (!burg) return false\n\n\n\n    burg.addEventListener('click', function(){\n\n\n\n        if(burg.classList.contains('is-open')){\n\n            burg.classList.remove('is-open');\n\n\n\n            page.classList.remove('is-bg');\n\n            body.classList.remove('is-hidden');\n\n            menu.classList.remove('show');\n\n        }else{\n\n            burg.classList.add('is-open');\n\n            menu.classList.add('show');\n\n\n\n            page.classList.add('is-bg');\n\n            body.classList.add('is-hidden')\n\n        }\n\n    })\n\n}\n\n\n\n\n\n\n\ndocument.addEventListener('click', (e) => {\n\n\n\n    if(menu.classList.contains('show')){\n\n        const withinBoundaries = e.composedPath().includes(menu);\n\n        const withinBurg = e.composedPath().includes(burg);\n\n        const withinSearch = e.composedPath().includes(searchButton);\n\n\n\n        if (!withinBoundaries && !withinBurg && !withinSearch) {\n\n            menu.classList.remove('show');\n\n            burg.classList.remove('is-open');\n\n\n\n            page.classList.remove('is-bg');\n\n            body.classList.remove('is-hidden');\n\n        }\n\n    }\n\n\n\n    return false\n\n})\n/**\n * @typedef {Object} dNode\n * @property {HTMLElement} parent\n * @property {HTMLElement} element\n * @property {HTMLElement} to\n * @property {string} breakpoint\n * @property {string} order\n * @property {number} index\n */\n\n/**\n * @typedef {Object} dMediaQuery\n * @property {string} query\n * @property {number} breakpoint\n */\n\n/**\n * @param {'min' | 'max'} type\n */\nfunction useDynamicAdapt(type = 'max') {\n\tconst className = '_dynamic_adapt_'\n\tconst attrName = 'data-da'\n\n\t/** @type {dNode[]} */\n\tconst dNodes = getDNodes()\n\n\t/** @type {dMediaQuery[]} */\n\tconst dMediaQueries = getDMediaQueries(dNodes)\n\n\tdMediaQueries.forEach((dMediaQuery) => {\n\t\tconst matchMedia = window.matchMedia(dMediaQuery.query)\n\t\t// массив объектов с подходящим брейкпоинтом\n\t\tconst filteredDNodes = dNodes.filter(({ breakpoint }) => breakpoint === dMediaQuery.breakpoint)\n\t\tconst mediaHandler = getMediaHandler(matchMedia, filteredDNodes)\n\t\tmatchMedia.addEventListener('change', mediaHandler)\n\n\t\tmediaHandler()\n\t})\n\n\tfunction getDNodes() {\n\t\tconst result = []\n\t\tconst elements = [...document.querySelectorAll(`[${attrName}]`)]\n\n\t\telements.forEach((element) => {\n\t\t\tconst attr = element.getAttribute(attrName)\n\t\t\tconst [toSelector, breakpoint, order] = attr.split(',').map((val) => val.trim())\n\n\t\t\tconst to = document.querySelector(toSelector)\n\n\t\t\tif (to) {\n\t\t\t\tresult.push({\n\t\t\t\t\tparent: element.parentElement,\n\t\t\t\t\telement,\n\t\t\t\t\tto,\n\t\t\t\t\tbreakpoint: breakpoint ?? '767',\n\t\t\t\t\torder: order !== undefined ? (isNumber(order) ? Number(order) : order) : 'last',\n\t\t\t\t\tindex: -1,\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\n\t\treturn sortDNodes(result)\n\t}\n\n\t/**\n\t * @param {dNode} items\n\t * @returns {dMediaQuery[]}\n\t */\n\tfunction getDMediaQueries(items) {\n\t\tconst uniqItems = [...new Set(items.map(({ breakpoint }) => `(${type}-width: ${breakpoint}px),${breakpoint}`))]\n\n\t\treturn uniqItems.map((item) => {\n\t\t\tconst [query, breakpoint] = item.split(',')\n\n\t\t\treturn { query, breakpoint }\n\t\t})\n\t}\n\n\t/**\n\t * @param {MediaQueryList} matchMedia\n\t * @param {dNodes} items\n\t */\n\tfunction getMediaHandler(matchMedia, items) {\n\t\treturn function mediaHandler() {\n\t\t\tif (matchMedia.matches) {\n\t\t\t\titems.forEach((item) => {\n\t\t\t\t\tmoveTo(item)\n\t\t\t\t})\n\n\t\t\t\titems.reverse()\n\t\t\t} else {\n\t\t\t\titems.forEach((item) => {\n\t\t\t\t\tif (item.element.classList.contains(className)) {\n\t\t\t\t\t\tmoveBack(item)\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\titems.reverse()\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {dNode} dNode\n\t */\n\tfunction moveTo(dNode) {\n\t\tconst { to, element, order } = dNode\n\t\tdNode.index = getIndexInParent(dNode.element, dNode.element.parentElement)\n\t\telement.classList.add(className)\n\n\t\tif (order === 'last' || order >= to.children.length) {\n\t\t\tto.append(element)\n\n\t\t\treturn\n\t\t}\n\n\t\tif (order === 'first') {\n\t\t\tto.prepend(element)\n\n\t\t\treturn\n\t\t}\n\n\t\tto.children[order].before(element)\n\t}\n\n\t/**\n\t * @param {dNode} dNode\n\t */\n\tfunction moveBack(dNode) {\n\t\tconst { parent, element, index } = dNode\n\t\telement.classList.remove(className)\n\n\t\tif (index >= 0 && parent.children[index]) {\n\t\t\tparent.children[index].before(element)\n\t\t} else {\n\t\t\tparent.append(element)\n\t\t}\n\t}\n\n\t/**\n\t * @param {HTMLElement} element\n\t * @param {HTMLElement} parent\n\t */\n\tfunction getIndexInParent(element, parent) {\n\t\treturn [...parent.children].indexOf(element)\n\t}\n\n\t/**\n\t * Функция сортировки массива по breakpoint и order\n\t * по возрастанию для type = min\n\t * по убыванию для type = max\n\t *\n\t * @param {dNode[]} items\n\t */\n\tfunction sortDNodes(items) {\n\t\tconst isMin = type === 'min' ? 1 : 0\n\n\t\treturn [...items].sort((a, b) => {\n\t\t\tif (a.breakpoint === b.breakpoint) {\n\t\t\t\tif (a.order === b.order) {\n\t\t\t\t\treturn 0\n\t\t\t\t}\n\n\t\t\t\tif (a.order === 'first' || b.order === 'last') {\n\t\t\t\t\treturn -1 * isMin\n\t\t\t\t}\n\n\t\t\t\tif (a.order === 'last' || b.order === 'first') {\n\t\t\t\t\treturn 1 * isMin\n\t\t\t\t}\n\n\t\t\t\treturn 0\n\t\t\t}\n\n\t\t\treturn (a.breakpoint - b.breakpoint) * isMin\n\t\t})\n\t}\n\n\tfunction isNumber(value) {\n\t\treturn !isNaN(value)\n\t}\n}\nlet headerSearch = document.querySelector('.header__search');\nlet headerSearchClose = document.querySelector('.header__search-close');\nlet searchBtn = document.querySelector('.headerActions__btn_search');\nlet page = document.querySelector('.page');\nlet body = document.querySelector('body');\n\nwindow.addEventListener('load', function () {\n    searchBtn.addEventListener('click', function(){\n\n        if(menu.classList.contains('show')){\n            menu.classList.remove('show');\n            burg.classList.remove('is-open');\n        }\n\n        headerSearch.classList.add('is-open');\n        page.classList.add('is-bg');\n        body.classList.add('is-hidden')\n    })\n\n    headerSearchClose.addEventListener('click', function(){\n        headerSearch.classList.remove('is-open');\n        page.classList.remove('is-bg');\n        body.classList.remove('is-hidden')\n    })\n})\n\nfunction headerFixed() {\n  let body = document.querySelector('body')\n  let header = document.querySelector('header');\n  let firstScreen = document.querySelector('.js-first-screen')\n\n  if (!firstScreen) return false\n\n  let firstScreenHeight = firstScreen.offsetHeight;\n\n  let headerHeight = header.offsetHeight;\n\n  let sumOffset = headerHeight + firstScreenHeight\n\n  if (window.pageYOffset > sumOffset) {\n    header.classList.add(\"fixed\");\n    body.style.paddingTop = headerHeight + 'px'\n  } else {\n    header.classList.remove(\"fixed\");\n    body.style.paddingTop = ''\n  }\n}\n\nwindow.addEventListener('scroll', function () {\n  headerFixed();\n})\nconst breadcrumbs = () => {\n    const selector = '.js-breadcrumbs';\n    const breadcrumbs = document.querySelector(selector);\n\n    if (!breadcrumbs) return;\n\n    const list = breadcrumbs.querySelector('[data-list]');\n    const inside = breadcrumbs.querySelector('[data-inside]');\n    const items = list && list.querySelectorAll('[data-item]');\n    const toggle = list && list.querySelector('[data-item=\"toggle\"]');\n\n    if (!items || !inside || !items[0]) {\n        breadcrumbs.classList.add('all-hide');\n        return;\n    }\n\n    const params = {};\n\n    items.forEach(item => {\n        const itemWidth = Math.ceil(item.getBoundingClientRect().width);\n        const type = item.getAttribute('data-item');\n\n        item.setAttribute('data-width', itemWidth);\n\n        if (params[type] !== undefined) {\n            params[type] += itemWidth;\n        } else {\n            params[type] = itemWidth;\n        }\n    });\n\n    checkWidth();\n\n    toggle && toggle.addEventListener('click', toggleInside);\n\n    projectOptions.onClick.push(target => {\n        !target.closest(selector) && toggleInside(null, 'hide');\n    });\n\n    window.addEventListener('resize', throttle(checkWidth, 150));\n\n    function toggleInside(e, action) {\n        if (inside.classList.contains('show') || action === 'hide') {\n            toggleVisibility(inside, 'hide');\n            inside.classList.remove('show');\n        } else {\n            toggleVisibility(inside, 'show');\n            inside.classList.add('show');\n        }\n    }\n\n    function checkWidth() {\n        const listWidth = Math.ceil(list.getBoundingClientRect().width);\n\n        let available = listWidth - params.main - params.current;\n        let viewDots = false;\n\n        if (available < params.link) {\n            available -= params.dots;\n            viewDots = true;\n        }\n\n        let viewLinks = 0;\n\n        for (let i = items.length - 1; i >= 0; i--) {\n            const item = items[i];\n            const type = item.getAttribute('data-item');\n\n            if (type === 'dots') {\n                if (viewDots) {\n                    item.classList.remove('hide');\n                    inside.classList.remove('hide');\n                } else {\n                    item.classList.add('hide');\n                    inside.classList.add('hide');\n                }\n            }\n\n            if (type === 'link') {\n                const index = item.getAttribute('data-index');\n                const itemWidth = item.getAttribute('data-width');\n                const clone = inside.querySelector('[data-item=\"' + index + '\"]');\n\n                if (itemWidth < available) {\n                    viewLinks++;\n                    available -= itemWidth;\n\n                    item.classList.remove('hide');\n                    if (clone) clone.classList.add('hide');\n                } else {\n                    item.classList.add('hide');\n                    if (clone) clone.classList.remove('hide');\n                }\n            }\n        }\n\n        if (viewLinks < 1) {\n            breadcrumbs.classList.add('all-hide');\n        } else {\n            breadcrumbs.classList.remove('all-hide');\n        }\n    }\n}\n\nlet controls = document.querySelectorAll('[data-title]')\n\nwindow.addEventListener('load', function () {\n\n    if(controls[0]){\n        controls.forEach((control) => {\n            control.addEventListener('click', function(){\n                control.classList.toggle('is-active')\n            })\n        });\n    }\n})\n// Функция throttle будет принимать 2 аргумента:\n// - callee, функция, которую надо вызывать;\n// - timeout, интервал в мс, с которым следует пропускать вызовы.\nconst throttle = (callee, timeout) => {\n    console.log('sdaws')\n    let timer = null\n  \n    // Как результат возвращаем другую функцию.\n    // Это нужно, чтобы мы могли не менять другие части кода, чуть позже мы увидим, как это помогает.\n    return function perform(...args) {\n      // Если таймер есть, то функция уже была вызвана, и значит новый вызов следует пропустить.\n      if (timer) return\n  \n      // Если таймера нет, значит мы можем вызвать функцию:\n      timer = setTimeout(() => {\n        // Аргументы передаём неизменными в функцию-аргумент:\n        callee(...args)\n  \n        // По окончании очищаем таймер:\n        clearTimeout(timer)\n        timer = null\n      }, timeout)\n    }\n  }\n  \n  // Применяем throttle():\n  \n  // function throttle(callee, timeout) {\n  //   /* ... */\n  // }\n  \n  // // Указываем, что нам нужно ждать 50 мс, прежде чем вызвать функцию заново:\n  // const optimizedHandler = throttle(recalculateProgress, 50)\n  \n  // // Передаём новую throttled-функцию в addEventListener:\n  // window.addEventListener('scroll', optimizedHandler)\n  // window.addEventListener('resize', optimizedHandler)\n  \nconst toggleVisibility = (element, action = 'auto', params = {}, callback) => {\n  if (!element) return false;\n\n  const options = Object.assign({\n    display: 'block',\n    changeHeight: true,\n    changeOpacity: true,\n    animation: 'ease-in-out',\n    timeout: 200,\n    styles: ''\n  }, params);\n\n  const transition = `all ${options.timeout}ms ${options.animation}`;\n  const isVisibleElement = checkVisible(element);\n\n  if (action === 'show') {\n    options._targetVisible = true;\n  } else if (action === 'hide') {\n    options._targetVisible = false;\n  } else {\n    options._targetVisible = !isVisibleElement;\n  }\n\n  if (options._targetVisible === isVisibleElement) return false;\n\n  options.styles && element.setAttribute('style', options.styles); // get attr style\n\n  if (options._targetVisible) {\n\n    element.style.visibility = 'hidden';\n    element.style.overflow = 'hidden';\n    element.style.display = options.display;\n\n    if (options.changeOpacity) {\n      element.style.opacity = '0';\n    }\n\n    if (options.changeHeight) {\n      const styles = getStyles(element);\n\n      options._h = styles.h;\n      options._pt = styles.pt;\n      options._pb = styles.pb;\n      options._mt = styles.mt;\n      options._mb = styles.mb;\n      options._btw = styles.btw;\n      options._bbw = styles.bbw;\n\n      element.style.height = '0';\n      element.style.marginTop = '0';\n      element.style.paddingTop = '0';\n      element.style.marginBottom = '0';\n      element.style.paddingBottom = '0';\n      element.style.borderTopWidth = '0';\n      element.style.borderBottomWidth = '0';\n    }\n\n    setTimeout(function() {\n      element.style.transition = transition;\n      element.style.visibility = 'visible';\n    }, 0);\n\n  } else {\n\n    if (options.changeOpacity) {\n      element.style.opacity = '1';\n    }\n\n    if (options.changeHeight) {\n      const styles = getStyles(element);\n\n      element.style.height = styles.h + 'px';\n      element.style.marginTop = styles.mt + 'px';\n      element.style.paddingTop = styles.pt + 'px';\n      element.style.marginBottom = styles.mb + 'px';\n      element.style.paddingBottom = styles.pb + 'px';\n      element.style.borderTopWidth = styles.btw + 'px';\n      element.style.borderBottomWidth = styles.bbw + 'px';\n    }\n\n    setTimeout(function() {\n      element.style.overflow = 'hidden';\n      element.style.transition = transition;\n    }, 0);\n\n  }\n\n  setTimeout(function() {\n    if (options.changeOpacity) {\n      element.style.opacity = options._targetVisible ? '1' : '0';\n    }\n\n    if (options.changeHeight) {\n      element.style.height = options._targetVisible ? (options._h + 'px') : '0';\n      element.style.marginTop = options._targetVisible ? (options._mt + 'px') : '0';\n      element.style.paddingTop = options._targetVisible ? (options._pt + 'px') : '0';\n      element.style.marginBottom = options._targetVisible ? (options._mb + 'px') : '0';\n      element.style.paddingBottom = options._targetVisible ? (options._pb + 'px') : '0';\n      element.style.borderTopWidth = options._targetVisible ? (options._btw + 'px') : '0';\n      element.style.borderBottomWidth = options._targetVisible ? (options._bbw + 'px') : '0';\n    }\n  }, 15);\n\n  setTimeout(function() {\n    element.setAttribute(\n      'style',\n      (options._targetVisible ? ('display:' + options.display + ';') : 'display:none;') + options.styles\n    );\n\n    typeof callback === 'function' && callback();\n  }, options.timeout);\n\n  function checkVisible(e) {\n    const box = e.getBoundingClientRect();\n    const height = box.height || (box.bottom - box.top);\n    const width = box.width || (box.right - box.left);\n\n    return !!height || !!width;\n  }\n\n  function getStyle(e, style) {\n    return parseInt(getComputedStyle(e)[style], 10);\n  }\n\n  function getStyles(e) {\n    return {\n      h: e.offsetHeight,\n      mt: getStyle(e, 'marginTop'),\n      pt: getStyle(e, 'paddingTop'),\n      mb: getStyle(e, 'marginBottom'),\n      pb: getStyle(e, 'paddingBottom'),\n      btw: getStyle(e, 'borderTopWidth'),\n      bbw: getStyle(e, 'borderBottomWidth'),\n    }\n  }\n\n  return true;\n};\n\n// Example use:\n// toggleVisibility(\n//   document.querySelector('.element'),   // DOM element (!)\n//   'auto',                               // action: 'show' | 'hide' | 'auto' (default) (?)\n//   {                                     // object params (?)\n//     display: 'block',                   // style display (default: 'block')\n//     changeHeight: true,                 // use animation height (default: true)\n//     changeOpacity: true,                // use animation opacity (default: true)\n//     animation: 'ease-in-out',           // style animation toggle (default: 'ease-in-out')\n//     timeout: 200,                       // timeout animation toggle (default: 200)\n//     styles: ''                          // add styles (default: '')\n//   },\n//   function() {}                         // callback (?)\n// )\n\n\nconst initImages = () => {\n  typeof lozad == 'function' && lozad('.lozad').observe();\n}\n\nconst initLazyLoadBlock = function() {\n  const selector = '.js-lazy-load-block';\n\n  lozad(selector, {\n    load: function(block) {\n      const url = block.getAttribute('data-url');\n\n      if (!url) return;\n\n      axios.get(url)\n      .then(function(response) {\n        const data = response.data;\n\n        block.classList.remove('loading');\n\n        if (data['error']) {\n          block.classList.add('error');\n          block.innerHTML = '<div class=\"container\">' + data['error'] + '</div>';\n          console.warn(data['error']);\n        } else {\n          block.innerHTML = response.data;\n          initDefaultElements();\n        }\n      })\n      .catch(function(error) {\n        block.classList.remove('loading');\n        block.classList.add('error');\n        block.innerHTML = '<div class=\"container\">' + projectOptions.error.default + '</div>';\n        console.warn(error);\n      });\n    }\n  }).observe();\n}\n\n\n\nconst initDefaultElements = function(e) {\n  initImages(e);\n}\n\nconst pageReady = function(e) {\n  initLazyLoadBlock(e);\n  initDefaultElements(e);\n  showMobileMenu();\n  useDynamicAdapt();\n  breadcrumbs();\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", pageReady);\n","let burg = document.querySelector('.js-burger');\nlet menu = document.querySelector('.js-header-menu');\nlet searchButton = document.querySelector('.headerActions__btn_search');\n\nfunction showMobileMenu () {\n    if (!burg) return false\n\n    burg.addEventListener('click', function(){\n\n        if(burg.classList.contains('is-open')){\n            burg.classList.remove('is-open');\n\n            page.classList.remove('is-bg');\n            body.classList.remove('is-hidden');\n            menu.classList.remove('show');\n        }else{\n            burg.classList.add('is-open');\n            menu.classList.add('show');\n\n            page.classList.add('is-bg');\n            body.classList.add('is-hidden')\n        }\n    })\n}\n\n\n\ndocument.addEventListener('click', (e) => {\n\n    if(menu.classList.contains('show')){\n        const withinBoundaries = e.composedPath().includes(menu);\n        const withinBurg = e.composedPath().includes(burg);\n        const withinSearch = e.composedPath().includes(searchButton);\n\n        if (!withinBoundaries && !withinBurg && !withinSearch) {\n            menu.classList.remove('show');\n            burg.classList.remove('is-open');\n\n            page.classList.remove('is-bg');\n            body.classList.remove('is-hidden');\n        }\n    }\n\n    return false\n})","/**\n * @typedef {Object} dNode\n * @property {HTMLElement} parent\n * @property {HTMLElement} element\n * @property {HTMLElement} to\n * @property {string} breakpoint\n * @property {string} order\n * @property {number} index\n */\n\n/**\n * @typedef {Object} dMediaQuery\n * @property {string} query\n * @property {number} breakpoint\n */\n\n/**\n * @param {'min' | 'max'} type\n */\nfunction useDynamicAdapt(type = 'max') {\n\tconst className = '_dynamic_adapt_'\n\tconst attrName = 'data-da'\n\n\t/** @type {dNode[]} */\n\tconst dNodes = getDNodes()\n\n\t/** @type {dMediaQuery[]} */\n\tconst dMediaQueries = getDMediaQueries(dNodes)\n\n\tdMediaQueries.forEach((dMediaQuery) => {\n\t\tconst matchMedia = window.matchMedia(dMediaQuery.query)\n\t\t// массив объектов с подходящим брейкпоинтом\n\t\tconst filteredDNodes = dNodes.filter(({ breakpoint }) => breakpoint === dMediaQuery.breakpoint)\n\t\tconst mediaHandler = getMediaHandler(matchMedia, filteredDNodes)\n\t\tmatchMedia.addEventListener('change', mediaHandler)\n\n\t\tmediaHandler()\n\t})\n\n\tfunction getDNodes() {\n\t\tconst result = []\n\t\tconst elements = [...document.querySelectorAll(`[${attrName}]`)]\n\n\t\telements.forEach((element) => {\n\t\t\tconst attr = element.getAttribute(attrName)\n\t\t\tconst [toSelector, breakpoint, order] = attr.split(',').map((val) => val.trim())\n\n\t\t\tconst to = document.querySelector(toSelector)\n\n\t\t\tif (to) {\n\t\t\t\tresult.push({\n\t\t\t\t\tparent: element.parentElement,\n\t\t\t\t\telement,\n\t\t\t\t\tto,\n\t\t\t\t\tbreakpoint: breakpoint ?? '767',\n\t\t\t\t\torder: order !== undefined ? (isNumber(order) ? Number(order) : order) : 'last',\n\t\t\t\t\tindex: -1,\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\n\t\treturn sortDNodes(result)\n\t}\n\n\t/**\n\t * @param {dNode} items\n\t * @returns {dMediaQuery[]}\n\t */\n\tfunction getDMediaQueries(items) {\n\t\tconst uniqItems = [...new Set(items.map(({ breakpoint }) => `(${type}-width: ${breakpoint}px),${breakpoint}`))]\n\n\t\treturn uniqItems.map((item) => {\n\t\t\tconst [query, breakpoint] = item.split(',')\n\n\t\t\treturn { query, breakpoint }\n\t\t})\n\t}\n\n\t/**\n\t * @param {MediaQueryList} matchMedia\n\t * @param {dNodes} items\n\t */\n\tfunction getMediaHandler(matchMedia, items) {\n\t\treturn function mediaHandler() {\n\t\t\tif (matchMedia.matches) {\n\t\t\t\titems.forEach((item) => {\n\t\t\t\t\tmoveTo(item)\n\t\t\t\t})\n\n\t\t\t\titems.reverse()\n\t\t\t} else {\n\t\t\t\titems.forEach((item) => {\n\t\t\t\t\tif (item.element.classList.contains(className)) {\n\t\t\t\t\t\tmoveBack(item)\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\titems.reverse()\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {dNode} dNode\n\t */\n\tfunction moveTo(dNode) {\n\t\tconst { to, element, order } = dNode\n\t\tdNode.index = getIndexInParent(dNode.element, dNode.element.parentElement)\n\t\telement.classList.add(className)\n\n\t\tif (order === 'last' || order >= to.children.length) {\n\t\t\tto.append(element)\n\n\t\t\treturn\n\t\t}\n\n\t\tif (order === 'first') {\n\t\t\tto.prepend(element)\n\n\t\t\treturn\n\t\t}\n\n\t\tto.children[order].before(element)\n\t}\n\n\t/**\n\t * @param {dNode} dNode\n\t */\n\tfunction moveBack(dNode) {\n\t\tconst { parent, element, index } = dNode\n\t\telement.classList.remove(className)\n\n\t\tif (index >= 0 && parent.children[index]) {\n\t\t\tparent.children[index].before(element)\n\t\t} else {\n\t\t\tparent.append(element)\n\t\t}\n\t}\n\n\t/**\n\t * @param {HTMLElement} element\n\t * @param {HTMLElement} parent\n\t */\n\tfunction getIndexInParent(element, parent) {\n\t\treturn [...parent.children].indexOf(element)\n\t}\n\n\t/**\n\t * Функция сортировки массива по breakpoint и order\n\t * по возрастанию для type = min\n\t * по убыванию для type = max\n\t *\n\t * @param {dNode[]} items\n\t */\n\tfunction sortDNodes(items) {\n\t\tconst isMin = type === 'min' ? 1 : 0\n\n\t\treturn [...items].sort((a, b) => {\n\t\t\tif (a.breakpoint === b.breakpoint) {\n\t\t\t\tif (a.order === b.order) {\n\t\t\t\t\treturn 0\n\t\t\t\t}\n\n\t\t\t\tif (a.order === 'first' || b.order === 'last') {\n\t\t\t\t\treturn -1 * isMin\n\t\t\t\t}\n\n\t\t\t\tif (a.order === 'last' || b.order === 'first') {\n\t\t\t\t\treturn 1 * isMin\n\t\t\t\t}\n\n\t\t\t\treturn 0\n\t\t\t}\n\n\t\t\treturn (a.breakpoint - b.breakpoint) * isMin\n\t\t})\n\t}\n\n\tfunction isNumber(value) {\n\t\treturn !isNaN(value)\n\t}\n}","let headerSearch = document.querySelector('.header__search');\nlet headerSearchClose = document.querySelector('.header__search-close');\nlet searchBtn = document.querySelector('.headerActions__btn_search');\nlet page = document.querySelector('.page');\nlet body = document.querySelector('body');\n\nwindow.addEventListener('load', function () {\n    searchBtn.addEventListener('click', function(){\n\n        if(menu.classList.contains('show')){\n            menu.classList.remove('show');\n            burg.classList.remove('is-open');\n        }\n\n        headerSearch.classList.add('is-open');\n        page.classList.add('is-bg');\n        body.classList.add('is-hidden')\n    })\n\n    headerSearchClose.addEventListener('click', function(){\n        headerSearch.classList.remove('is-open');\n        page.classList.remove('is-bg');\n        body.classList.remove('is-hidden')\n    })\n})\n","function headerFixed() {\n  let body = document.querySelector('body')\n  let header = document.querySelector('header');\n  let firstScreen = document.querySelector('.js-first-screen')\n\n  if (!firstScreen) return false\n\n  let firstScreenHeight = firstScreen.offsetHeight;\n\n  let headerHeight = header.offsetHeight;\n\n  let sumOffset = headerHeight + firstScreenHeight\n\n  if (window.pageYOffset > sumOffset) {\n    header.classList.add(\"fixed\");\n    body.style.paddingTop = headerHeight + 'px'\n  } else {\n    header.classList.remove(\"fixed\");\n    body.style.paddingTop = ''\n  }\n}\n\nwindow.addEventListener('scroll', function () {\n  headerFixed();\n})","const breadcrumbs = () => {\n    const selector = '.js-breadcrumbs';\n    const breadcrumbs = document.querySelector(selector);\n\n    if (!breadcrumbs) return;\n\n    const list = breadcrumbs.querySelector('[data-list]');\n    const inside = breadcrumbs.querySelector('[data-inside]');\n    const items = list && list.querySelectorAll('[data-item]');\n    const toggle = list && list.querySelector('[data-item=\"toggle\"]');\n\n    if (!items || !inside || !items[0]) {\n        breadcrumbs.classList.add('all-hide');\n        return;\n    }\n\n    const params = {};\n\n    items.forEach(item => {\n        const itemWidth = Math.ceil(item.getBoundingClientRect().width);\n        const type = item.getAttribute('data-item');\n\n        item.setAttribute('data-width', itemWidth);\n\n        if (params[type] !== undefined) {\n            params[type] += itemWidth;\n        } else {\n            params[type] = itemWidth;\n        }\n    });\n\n    checkWidth();\n\n    toggle && toggle.addEventListener('click', toggleInside);\n\n    projectOptions.onClick.push(target => {\n        !target.closest(selector) && toggleInside(null, 'hide');\n    });\n\n    window.addEventListener('resize', throttle(checkWidth, 150));\n\n    function toggleInside(e, action) {\n        if (inside.classList.contains('show') || action === 'hide') {\n            toggleVisibility(inside, 'hide');\n            inside.classList.remove('show');\n        } else {\n            toggleVisibility(inside, 'show');\n            inside.classList.add('show');\n        }\n    }\n\n    function checkWidth() {\n        const listWidth = Math.ceil(list.getBoundingClientRect().width);\n\n        let available = listWidth - params.main - params.current;\n        let viewDots = false;\n\n        if (available < params.link) {\n            available -= params.dots;\n            viewDots = true;\n        }\n\n        let viewLinks = 0;\n\n        for (let i = items.length - 1; i >= 0; i--) {\n            const item = items[i];\n            const type = item.getAttribute('data-item');\n\n            if (type === 'dots') {\n                if (viewDots) {\n                    item.classList.remove('hide');\n                    inside.classList.remove('hide');\n                } else {\n                    item.classList.add('hide');\n                    inside.classList.add('hide');\n                }\n            }\n\n            if (type === 'link') {\n                const index = item.getAttribute('data-index');\n                const itemWidth = item.getAttribute('data-width');\n                const clone = inside.querySelector('[data-item=\"' + index + '\"]');\n\n                if (itemWidth < available) {\n                    viewLinks++;\n                    available -= itemWidth;\n\n                    item.classList.remove('hide');\n                    if (clone) clone.classList.add('hide');\n                } else {\n                    item.classList.add('hide');\n                    if (clone) clone.classList.remove('hide');\n                }\n            }\n        }\n\n        if (viewLinks < 1) {\n            breadcrumbs.classList.add('all-hide');\n        } else {\n            breadcrumbs.classList.remove('all-hide');\n        }\n    }\n}\n","let controls = document.querySelectorAll('[data-title]')\n\nwindow.addEventListener('load', function () {\n\n    if(controls[0]){\n        controls.forEach((control) => {\n            control.addEventListener('click', function(){\n                control.classList.toggle('is-active')\n            })\n        });\n    }\n})","// Функция throttle будет принимать 2 аргумента:\n// - callee, функция, которую надо вызывать;\n// - timeout, интервал в мс, с которым следует пропускать вызовы.\nconst throttle = (callee, timeout) => {\n    console.log('sdaws')\n    let timer = null\n  \n    // Как результат возвращаем другую функцию.\n    // Это нужно, чтобы мы могли не менять другие части кода, чуть позже мы увидим, как это помогает.\n    return function perform(...args) {\n      // Если таймер есть, то функция уже была вызвана, и значит новый вызов следует пропустить.\n      if (timer) return\n  \n      // Если таймера нет, значит мы можем вызвать функцию:\n      timer = setTimeout(() => {\n        // Аргументы передаём неизменными в функцию-аргумент:\n        callee(...args)\n  \n        // По окончании очищаем таймер:\n        clearTimeout(timer)\n        timer = null\n      }, timeout)\n    }\n  }\n  \n  // Применяем throttle():\n  \n  // function throttle(callee, timeout) {\n  //   /* ... */\n  // }\n  \n  // // Указываем, что нам нужно ждать 50 мс, прежде чем вызвать функцию заново:\n  // const optimizedHandler = throttle(recalculateProgress, 50)\n  \n  // // Передаём новую throttled-функцию в addEventListener:\n  // window.addEventListener('scroll', optimizedHandler)\n  // window.addEventListener('resize', optimizedHandler)\n  ","const toggleVisibility = (element, action = 'auto', params = {}, callback) => {\n  if (!element) return false;\n\n  const options = Object.assign({\n    display: 'block',\n    changeHeight: true,\n    changeOpacity: true,\n    animation: 'ease-in-out',\n    timeout: 200,\n    styles: ''\n  }, params);\n\n  const transition = `all ${options.timeout}ms ${options.animation}`;\n  const isVisibleElement = checkVisible(element);\n\n  if (action === 'show') {\n    options._targetVisible = true;\n  } else if (action === 'hide') {\n    options._targetVisible = false;\n  } else {\n    options._targetVisible = !isVisibleElement;\n  }\n\n  if (options._targetVisible === isVisibleElement) return false;\n\n  options.styles && element.setAttribute('style', options.styles); // get attr style\n\n  if (options._targetVisible) {\n\n    element.style.visibility = 'hidden';\n    element.style.overflow = 'hidden';\n    element.style.display = options.display;\n\n    if (options.changeOpacity) {\n      element.style.opacity = '0';\n    }\n\n    if (options.changeHeight) {\n      const styles = getStyles(element);\n\n      options._h = styles.h;\n      options._pt = styles.pt;\n      options._pb = styles.pb;\n      options._mt = styles.mt;\n      options._mb = styles.mb;\n      options._btw = styles.btw;\n      options._bbw = styles.bbw;\n\n      element.style.height = '0';\n      element.style.marginTop = '0';\n      element.style.paddingTop = '0';\n      element.style.marginBottom = '0';\n      element.style.paddingBottom = '0';\n      element.style.borderTopWidth = '0';\n      element.style.borderBottomWidth = '0';\n    }\n\n    setTimeout(function() {\n      element.style.transition = transition;\n      element.style.visibility = 'visible';\n    }, 0);\n\n  } else {\n\n    if (options.changeOpacity) {\n      element.style.opacity = '1';\n    }\n\n    if (options.changeHeight) {\n      const styles = getStyles(element);\n\n      element.style.height = styles.h + 'px';\n      element.style.marginTop = styles.mt + 'px';\n      element.style.paddingTop = styles.pt + 'px';\n      element.style.marginBottom = styles.mb + 'px';\n      element.style.paddingBottom = styles.pb + 'px';\n      element.style.borderTopWidth = styles.btw + 'px';\n      element.style.borderBottomWidth = styles.bbw + 'px';\n    }\n\n    setTimeout(function() {\n      element.style.overflow = 'hidden';\n      element.style.transition = transition;\n    }, 0);\n\n  }\n\n  setTimeout(function() {\n    if (options.changeOpacity) {\n      element.style.opacity = options._targetVisible ? '1' : '0';\n    }\n\n    if (options.changeHeight) {\n      element.style.height = options._targetVisible ? (options._h + 'px') : '0';\n      element.style.marginTop = options._targetVisible ? (options._mt + 'px') : '0';\n      element.style.paddingTop = options._targetVisible ? (options._pt + 'px') : '0';\n      element.style.marginBottom = options._targetVisible ? (options._mb + 'px') : '0';\n      element.style.paddingBottom = options._targetVisible ? (options._pb + 'px') : '0';\n      element.style.borderTopWidth = options._targetVisible ? (options._btw + 'px') : '0';\n      element.style.borderBottomWidth = options._targetVisible ? (options._bbw + 'px') : '0';\n    }\n  }, 15);\n\n  setTimeout(function() {\n    element.setAttribute(\n      'style',\n      (options._targetVisible ? ('display:' + options.display + ';') : 'display:none;') + options.styles\n    );\n\n    typeof callback === 'function' && callback();\n  }, options.timeout);\n\n  function checkVisible(e) {\n    const box = e.getBoundingClientRect();\n    const height = box.height || (box.bottom - box.top);\n    const width = box.width || (box.right - box.left);\n\n    return !!height || !!width;\n  }\n\n  function getStyle(e, style) {\n    return parseInt(getComputedStyle(e)[style], 10);\n  }\n\n  function getStyles(e) {\n    return {\n      h: e.offsetHeight,\n      mt: getStyle(e, 'marginTop'),\n      pt: getStyle(e, 'paddingTop'),\n      mb: getStyle(e, 'marginBottom'),\n      pb: getStyle(e, 'paddingBottom'),\n      btw: getStyle(e, 'borderTopWidth'),\n      bbw: getStyle(e, 'borderBottomWidth'),\n    }\n  }\n\n  return true;\n};\n\n// Example use:\n// toggleVisibility(\n//   document.querySelector('.element'),   // DOM element (!)\n//   'auto',                               // action: 'show' | 'hide' | 'auto' (default) (?)\n//   {                                     // object params (?)\n//     display: 'block',                   // style display (default: 'block')\n//     changeHeight: true,                 // use animation height (default: true)\n//     changeOpacity: true,                // use animation opacity (default: true)\n//     animation: 'ease-in-out',           // style animation toggle (default: 'ease-in-out')\n//     timeout: 200,                       // timeout animation toggle (default: 200)\n//     styles: ''                          // add styles (default: '')\n//   },\n//   function() {}                         // callback (?)\n// )\n","const initImages = () => {\n  typeof lozad == 'function' && lozad('.lozad').observe();\n}","const initLazyLoadBlock = function() {\n  const selector = '.js-lazy-load-block';\n\n  lozad(selector, {\n    load: function(block) {\n      const url = block.getAttribute('data-url');\n\n      if (!url) return;\n\n      axios.get(url)\n      .then(function(response) {\n        const data = response.data;\n\n        block.classList.remove('loading');\n\n        if (data['error']) {\n          block.classList.add('error');\n          block.innerHTML = '<div class=\"container\">' + data['error'] + '</div>';\n          console.warn(data['error']);\n        } else {\n          block.innerHTML = response.data;\n          initDefaultElements();\n        }\n      })\n      .catch(function(error) {\n        block.classList.remove('loading');\n        block.classList.add('error');\n        block.innerHTML = '<div class=\"container\">' + projectOptions.error.default + '</div>';\n        console.warn(error);\n      });\n    }\n  }).observe();\n}\n"]}